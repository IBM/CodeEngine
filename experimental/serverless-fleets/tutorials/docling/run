#!/bin/bash

set -e

uuid=$(uuidgen | tr '[:upper:]' '[:lower:]' | awk -F- '{print $1}')

IMAGE=$(ibmcloud cr images | grep "ce--fleet-docling" | awk '{print $1}')

if [ -z "${IMAGE}" ]; then
  echo "no image found. pls build a docling image with ./build.sh"
  exit -1
else 
  echo "using image: $IMAGE"
fi 

echo ibmcloud code-engine experimental fleet run --name "fleet-${uuid}-1"
echo "  "--image $IMAGE
echo "  "--registry-secret fleet-registry-secret
echo "  "--worker-profile mx3d-24x240
echo "  "--max-scale 4
echo "  "--tasks 11
echo "  "--cpu 24
echo "  "--memory 240G
echo "  "--command="bash"
echo "  "--arg "-c"
echo "  "--arg "mkdir -p /mnt/ce/data/result/\$CE_FLEET_ID/; cd /mnt/ce/data/tutorials/docling/pdfs; files=( * ); docling --artifacts-path=/root/.cache/docling/models \${files[CE_TASK_ID]} --num-threads 24 --output /mnt/ce/data/result/\$CE_FLEET_ID/;"


ibmcloud code-engine experimental fleet run --name "fleet-${uuid}-1" \
--image $IMAGE \
--registry-secret fleet-registry-secret \
--worker-profile mx3d-24x240 \
--max-scale 4 \
--tasks 11 \
--cpu 24 \
--memory 240G \
--command="bash" \
--arg "-c" \
--arg "mkdir -p /mnt/ce/data/result/\$CE_FLEET_ID/; cd /mnt/ce/data/tutorials/docling/pdfs; files=( * ); docling --artifacts-path=/root/.cache/docling/models \${files[CE_TASK_ID]} --num-threads 24 --output /mnt/ce/data/result/\$CE_FLEET_ID/;"

ibmcloud code-engine experimental fleet get --name "fleet-${uuid}-1"

