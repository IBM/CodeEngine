#!/bin/bash

# Env Vars:
# REGISTRY: name of the image registry/namespace to get the images
# COS_ID: If set, specifies the full CRN of a Cloud Object Storage instance to
# use

export REGISTRY=${REGISTRY:-icr.io/codeengine}
export PROJECT_NAME=$(ibmcloud ce project current | awk '/^Name/{ print $2 }')
export PROJECT_ID=$(ibmcloud ce project get --name ${PROJECT_NAME} | \
  awk '/^ID/{ print $2 }')
export REGION=$(ibmcloud ce project current --output json|jq -r '.region_id')
export POLICY_ID=""
export BUCKET="${PROJECT_ID}-ce-samples-test"

# Clean up previous run
function clean() {
  set +ex
  echo "Cleaning..."

  (
  ibmcloud ce sub cos delete -n cos-sub -f --wait=true
  if [[ -n "$POLICY_ID" ]]; then
    ibmcloud iam authorization-policy-delete $POLICY_ID --force
  fi
  ibmcloud ce app delete --name cos-app --force
  ibmcloud cos bucket-delete --bucket ${BUCKET} --force
  if [[ -z "$COS_ID" ]]; then
    # Delete the COS instance unless the instance was given to us
    ibmcloud resource service-instance-delete ce-cos-event -f -q
  fi
  rm -f out
  ) > /dev/null 2>&1
}

clean
[[ "$1" == "clean" ]] && exit 0

set -ex

CID=${COS_ID}

# Create a COS instance unless one has been specified for use
if [[ $CID == "" ]]; then
  ibmcloud resource service-instance-create ce-cos-event \
    cloud-object-storage lite global
  CID=$(ibmcloud resource service-instance ce-cos-event | \
    awk '/^ID/{ print $2 }')
fi

# Set the COS config to use this instance
ibmcloud cos config crn --crn $CID --force
ibmcloud cos config auth --method IAM
ibmcloud cos config region --region $REGION

# Create IAM authorization policy so we can receive notifications from COS
POLICY_ID=$(ibmcloud iam authorization-policy-create codeengine \
 cloud-object-storage "Notifications Manager" \
 --source-service-instance-name ${PROJECT_NAME} \
 --target-service-instance-id ${CID} | awk '/^Authorization/{ print $3 }')

# Create our bucket
ibmcloud cos bucket-create --bucket ${BUCKET} --ibm-service-instance-id $CID

# Create the app && save its URL for later
ibmcloud ce app create -n cos-app --image ${REGISTRY}/cos-listen \
  --cpu 0.125 \
  --memory 0.25G \
  --min-scale=1 \
  --max-scale=1
URL=$(ibmcloud ce app get --output url --name cos-app)

# Setup the COS Event Source
ibmcloud ce sub cos create -n cos-sub -d cos-app -b ${BUCKET}

# Now wait until we get the event - shouldn't take more than a minute
while true ; do
  # Upload a file to COS (this will generate an event)
  ibmcloud cos object-put --bucket ${BUCKET} --key "README.md" --body README.md

  # Delete the file from COS (another event)
  ibmcloud cos object-delete --bucket ${BUCKET} --key "README.md" --force

  ibmcloud ce app logs --name cos-app > out
  grep "README.md" out > /dev/null 2>&1 && break
  sleep 10
done

echo "Log from 'cos-app' app:"
cat out

echo "=============="
echo "Event stats:"

curl -fs ${URL}/stats

# Clean up
clean
