#!/bin/bash

# Env Vars:
# COUNT: number of instances of the job to run
# REGISTRY: name of the image registry/namespace to get the images

# Clean up previous run
function clean() {
  set +ex
  echo Cleaning...
  (
  ibmcloud ce jobrun delete -n j2a-job -f
  ibmcloud ce app delete -n j2a-app -f
  ) > /dev/null 2>&1
}

clean
[[ "$1" == "clean" ]] && exit 0

set -ex
export REGISTRY=${REGISTRY:-icr.io/codeengine}
export COUNT=${COUNT:-50}

# Create the app
ibmcloud ce app create -n j2a-app --min=1 --max=1 --cpu 0.125 --memory 0.25G --image ${REGISTRY}/j2a-app

# Get metadata about the app for later use
URL=$(ibmcloud ce app get -n j2a-app -o url)

# Create/run the job, passing in the project/namespace - and wait to finish
ibmcloud ce jobrun submit -n j2a-job --ai=1-${COUNT} --cpu 0.125 --memory 0.25G  \
  --image ${REGISTRY}/j2a-job --wait

# Check the app to see how many times it was hit
if ! [[ "Count: $((COUNT*10))" == "$(curl -fs $URL)" ]]; then
  echo "Should be $((COUNT*10))"

  # Show the logs for the job to see if it tells us why all messages didn't
  # make it.
  ibmcloud ce jobrun logs -n j2a-job

  # And for completeness, show the logs for the app too, but should be empty
  ibmcloud ce app logs -n j2a-app

  exit 1
fi

# Clean up
clean
